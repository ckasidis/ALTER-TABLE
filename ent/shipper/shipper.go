// Code generated by ent, DO NOT EDIT.

package shipper

const (
	// Label holds the string label denoting the shipper type in the database.
	Label = "shipper"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeOrders holds the string denoting the orders edge name in mutations.
	EdgeOrders = "orders"
	// Table holds the table name of the shipper in the database.
	Table = "shippers"
	// OrdersTable is the table that holds the orders relation/edge.
	OrdersTable = "shippers"
	// OrdersInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrdersInverseTable = "orders"
	// OrdersColumn is the table column denoting the orders relation/edge.
	OrdersColumn = "shipper_orders"
)

// Columns holds all SQL columns for shipper fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "shippers"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"shipper_orders",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
